// Generated by CoffeeScript 1.6.3
"use strict";
module.exports = function(grunt) {
  var e, localConfig;
  localConfig = void 0;
  try {
    localConfig = require("./server/config/local.env");
  } catch (_error) {
    e = _error;
    localConfig = {};
  }
  require("jit-grunt")(grunt, {
    express: "grunt-express-server",
    useminPrepare: "grunt-usemin",
    ngtemplates: "grunt-angular-templates",
    cdnify: "grunt-google-cdn",
    protractor: "grunt-protractor-runner",
    injector: "grunt-asset-injector",
    buildcontrol: "grunt-build-control"
  });
  require("time-grunt")(grunt);
  grunt.initConfig({
    pkg: grunt.file.readJSON("package.json"),
    yeoman: {
      client: require("./bower.json").appPath || "client",
      dist: "dist"
    },
    express: {
      options: {
        port: process.env.PORT || 9000
      },
      dev: {
        options: {
          script: "server/app.js",
          debug: true
        }
      },
      prod: {
        options: {
          script: "dist/server/app.js"
        }
      }
    },
    open: {
      server: {
        url: "http://localhost:<%= express.options.port %>"
      }
    },
    watch: {
      injectJS: {
        files: ["<%= yeoman.client %>/{app,components}/**/*.js", "!<%= yeoman.client %>/{app,components}/**/*.spec.js", "!<%= yeoman.client %>/{app,components}/**/*.mock.js", "!<%= yeoman.client %>/app/app.js"],
        tasks: ["injector:scripts"]
      },
      injectCss: {
        files: ["<%= yeoman.client %>/{app,components}/**/*.css"],
        tasks: ["injector:css"]
      },
      mochaTest: {
        files: ["server/**/*.spec.js"],
        tasks: ["env:test", "mochaTest"]
      },
      jsTest: {
        files: ["<%= yeoman.client %>/{app,components}/**/*.spec.js", "<%= yeoman.client %>/{app,components}/**/*.mock.js"],
        tasks: ["newer:jshint:all", "karma"]
      },
      injectSass: {
        files: ["<%= yeoman.client %>/{app,components}/**/*.{scss,sass}"],
        tasks: ["injector:sass"]
      },
      sass: {
        files: ["<%= yeoman.client %>/{app,components}/**/*.{scss,sass}"],
        tasks: ["sass", "autoprefixer"]
      },
      jade: {
        files: ["<%= yeoman.client %>/{app,components}/*", "<%= yeoman.client %>/{app,components}/**/*.jade"],
        tasks: ["jade"]
      },
      coffee: {
        files: ["<%= yeoman.client %>/{app,components}/**/*.{coffee,litcoffee,coffee.md}", "!<%= yeoman.client %>/{app,components}/**/*.spec.{coffee,litcoffee,coffee.md}"],
        tasks: ["newer:coffee", "injector:scripts"]
      },
      coffeeTest: {
        files: ["<%= yeoman.client %>/{app,components}/**/*.spec.{coffee,litcoffee,coffee.md}"],
        tasks: ["karma"]
      },
      gruntfile: {
        files: ["Gruntfile.js"]
      },
      livereload: {
        files: ["{.tmp,<%= yeoman.client %>}/{app,components}/**/*.css", "{.tmp,<%= yeoman.client %>}/{app,components}/**/*.html", "{.tmp,<%= yeoman.client %>}/{app,components}/**/*.js", "!{.tmp,<%= yeoman.client %>}{app,components}/**/*.spec.js", "!{.tmp,<%= yeoman.client %>}/{app,components}/**/*.mock.js", "<%= yeoman.client %>/assets/images/{,*//*}*.{png,jpg,jpeg,gif,webp,svg}"],
        options: {
          livereload: true
        }
      },
      express: {
        files: ["server/**/*.{js,json}"],
        tasks: ["express:dev", "wait"],
        options: {
          livereload: true,
          nospawn: true
        }
      }
    },
    jshint: {
      options: {
        jshintrc: "<%= yeoman.client %>/.jshintrc",
        reporter: require("jshint-stylish")
      },
      server: {
        options: {
          jshintrc: "server/.jshintrc"
        },
        src: ["server/**/*.js", "!server/**/*.spec.js"]
      },
      serverTest: {
        options: {
          jshintrc: "server/.jshintrc-spec"
        },
        src: ["server/**/*.spec.js"]
      },
      all: ["<%= yeoman.client %>/{app,components}/**/*.js", "!<%= yeoman.client %>/{app,components}/**/*.spec.js", "!<%= yeoman.client %>/{app,components}/**/*.mock.js"],
      test: {
        src: ["<%= yeoman.client %>/{app,components}/**/*.spec.js", "<%= yeoman.client %>/{app,components}/**/*.mock.js"]
      }
    },
    clean: {
      dist: {
        files: [
          {
            dot: true,
            src: [".tmp", "<%= yeoman.dist %>/*", "!<%= yeoman.dist %>/.git*", "!<%= yeoman.dist %>/.openshift", "!<%= yeoman.dist %>/Procfile"]
          }
        ]
      },
      server: ".tmp"
    },
    autoprefixer: {
      options: {
        browsers: ["last 1 version"]
      },
      dist: {
        files: [
          {
            expand: true,
            cwd: ".tmp/",
            src: "{,*/}*.css",
            dest: ".tmp/"
          }
        ]
      }
    },
    "node-inspector": {
      custom: {
        options: {
          "web-host": "localhost"
        }
      }
    },
    nodemon: {
      debug: {
        script: "server/app.js",
        options: {
          nodeArgs: ["--debug-brk"],
          env: {
            PORT: process.env.PORT || 9000
          },
          callback: function(nodemon) {
            nodemon.on("log", function(event) {
              console.log(event.colour);
            });
            nodemon.on("config:update", function() {
              setTimeout((function() {
                require("open")("http://localhost:8080/debug?port=5858");
              }), 500);
            });
          }
        }
      }
    },
    wiredep: {
      target: {
        src: "<%= yeoman.client %>/index.html",
        ignorePath: "<%= yeoman.client %>/",
        exclude: [/bootstrap-sass-official/, /bootstrap.js/, "/json3/", "/es5-shim/", /bootstrap.css/, /font-awesome.css/]
      }
    },
    rev: {
      dist: {
        files: {
          src: ["<%= yeoman.dist %>/public/{,*/}*.js", "<%= yeoman.dist %>/public/{,*/}*.css", "<%= yeoman.dist %>/public/assets/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}", "<%= yeoman.dist %>/public/assets/fonts/*"]
        }
      }
    },
    useminPrepare: {
      html: ["<%= yeoman.client %>/index.html"],
      options: {
        dest: "<%= yeoman.dist %>/public"
      }
    },
    usemin: {
      html: ["<%= yeoman.dist %>/public/{,*/}*.html"],
      css: ["<%= yeoman.dist %>/public/{,*/}*.css"],
      js: ["<%= yeoman.dist %>/public/{,*/}*.js"],
      options: {
        assetsDirs: ["<%= yeoman.dist %>/public", "<%= yeoman.dist %>/public/assets/images"],
        patterns: {
          js: [[/(assets\/images\/.*?\.(?:gif|jpeg|jpg|png|webp|svg))/g, "Update the JS to reference our revved images"]]
        }
      }
    },
    imagemin: {
      dist: {
        files: [
          {
            expand: true,
            cwd: "<%= yeoman.client %>/assets/images",
            src: "{,*/}*.{png,jpg,jpeg,gif}",
            dest: "<%= yeoman.dist %>/public/assets/images"
          }
        ]
      }
    },
    svgmin: {
      dist: {
        files: [
          {
            expand: true,
            cwd: "<%= yeoman.client %>/assets/images",
            src: "{,*/}*.svg",
            dest: "<%= yeoman.dist %>/public/assets/images"
          }
        ]
      }
    },
    ngAnnotate: {
      dist: {
        files: [
          {
            expand: true,
            cwd: ".tmp/concat",
            src: "*/**.js",
            dest: ".tmp/concat"
          }
        ]
      }
    },
    ngtemplates: {
      options: {
        module: "parsimotionSyncerApp",
        htmlmin: {
          collapseBooleanAttributes: true,
          collapseWhitespace: true,
          removeAttributeQuotes: true,
          removeEmptyAttributes: true,
          removeRedundantAttributes: true,
          removeScriptTypeAttributes: true,
          removeStyleLinkTypeAttributes: true
        },
        usemin: "app/app.js"
      },
      main: {
        cwd: "<%= yeoman.client %>",
        src: ["{app,components}/**/*.html"],
        dest: ".tmp/templates.js"
      },
      tmp: {
        cwd: ".tmp",
        src: ["{app,components}/**/*.html"],
        dest: ".tmp/tmp-templates.js"
      }
    },
    cdnify: {
      dist: {
        html: ["<%= yeoman.dist %>/public/*.html"]
      }
    },
    copy: {
      dist: {
        files: [
          {
            expand: true,
            dot: true,
            cwd: "<%= yeoman.client %>",
            dest: "<%= yeoman.dist %>/public",
            src: ["*.{ico,png,txt}", ".htaccess", "bower_components/**/*", "assets/images/{,*/}*.{webp}", "assets/fonts/**/*", "index.html"]
          }, {
            expand: true,
            cwd: ".tmp/images",
            dest: "<%= yeoman.dist %>/public/assets/images",
            src: ["generated/*"]
          }, {
            expand: true,
            dest: "<%= yeoman.dist %>",
            src: ["package.json", "server/**/*"]
          }
        ]
      },
      styles: {
        expand: true,
        cwd: "<%= yeoman.client %>",
        dest: ".tmp/",
        src: ["{app,components}/**/*.css"]
      }
    },
    buildcontrol: {
      options: {
        dir: "dist",
        commit: true,
        push: true,
        connectCommits: false,
        message: "Built %sourceName% from commit %sourceCommit% on branch %sourceBranch%"
      },
      heroku: {
        options: {
          remote: "git@heroku.com:parsimotion-syncer.git",
          branch: "master"
        }
      },
      openshift: {
        options: {
          remote: "openshift",
          branch: "master"
        }
      }
    },
    concurrent: {
      server: ["coffee", "jade", "sass"],
      test: ["coffee", "jade", "sass"],
      debug: {
        tasks: ["nodemon", "node-inspector"],
        options: {
          logConcurrentOutput: true
        }
      },
      dist: ["coffee", "jade", "sass", "imagemin", "svgmin"]
    },
    karma: {
      unit: {
        configFile: "karma.conf.js",
        singleRun: true
      }
    },
    mochaTest: {
      options: {
        reporter: "spec"
      },
      src: ["server/**/*.spec.js"]
    },
    protractor: {
      options: {
        configFile: "protractor.conf.js"
      },
      chrome: {
        options: {
          args: {
            browser: "chrome"
          }
        }
      }
    },
    env: {
      test: {
        NODE_ENV: "test"
      },
      prod: {
        NODE_ENV: "production"
      },
      all: localConfig
    },
    jade: {
      compile: {
        options: {
          data: {
            debug: false
          }
        },
        files: [
          {
            expand: true,
            cwd: "<%= yeoman.client %>",
            src: ["{app,components}/**/*.jade"],
            dest: ".tmp",
            ext: ".html"
          }
        ]
      }
    },
    coffee: {
      options: {
        sourceMap: true,
        sourceRoot: ""
      },
      server: {
        files: [
          {
            expand: true,
            cwd: "client",
            src: ["{app,components}/**/*.coffee", "!{app,components}/**/*.spec.coffee"],
            dest: ".tmp",
            ext: ".js"
          }
        ]
      }
    },
    sass: {
      server: {
        options: {
          loadPath: ["<%= yeoman.client %>/bower_components", "<%= yeoman.client %>/app", "<%= yeoman.client %>/components"],
          compass: false
        },
        files: {
          ".tmp/app/app.css": "<%= yeoman.client %>/app/app.scss"
        }
      }
    },
    injector: {
      options: {},
      scripts: {
        options: {
          transform: function(filePath) {
            filePath = filePath.replace("/client/", "");
            filePath = filePath.replace("/.tmp/", "");
            return "<script src=\"" + filePath + "\"></script>";
          },
          starttag: "<!-- injector:js -->",
          endtag: "<!-- endinjector -->"
        },
        files: {
          "<%= yeoman.client %>/index.html": [["{.tmp,<%= yeoman.client %>}/{app,components}/**/*.js", "!{.tmp,<%= yeoman.client %>}/app/app.js", "!{.tmp,<%= yeoman.client %>}/{app,components}/**/*.spec.js", "!{.tmp,<%= yeoman.client %>}/{app,components}/**/*.mock.js"]]
        }
      },
      sass: {
        options: {
          transform: function(filePath) {
            filePath = filePath.replace("/client/app/", "");
            filePath = filePath.replace("/client/components/", "");
            return "@import '" + filePath + "';";
          },
          starttag: "// injector",
          endtag: "// endinjector"
        },
        files: {
          "<%= yeoman.client %>/app/app.scss": ["<%= yeoman.client %>/{app,components}/**/*.{scss,sass}", "!<%= yeoman.client %>/app/app.{scss,sass}"]
        }
      },
      css: {
        options: {
          transform: function(filePath) {
            filePath = filePath.replace("/client/", "");
            filePath = filePath.replace("/.tmp/", "");
            return "<link rel=\"stylesheet\" href=\"" + filePath + "\">";
          },
          starttag: "<!-- injector:css -->",
          endtag: "<!-- endinjector -->"
        },
        files: {
          "<%= yeoman.client %>/index.html": ["<%= yeoman.client %>/{app,components}/**/*.css"]
        }
      }
    }
  });
  return grunt.registerTask("wait", function() {
    var done;
    grunt.log.ok("Waiting for server reload...");
    done = this.async();
    return setTimeout((function() {
      grunt.log.writeln("Done waiting!");
      return done();
    }), 1500);
  });
};
